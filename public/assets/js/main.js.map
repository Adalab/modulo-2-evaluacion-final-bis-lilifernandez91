{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["'use strict';\n\n//6- Obtener elementos del html y asignar a la constante\nconst htmlSection = document.querySelector(\".section-main\")\nconst saveData = document.getElementById(\"save-data\")\nconst recoverData = document.getElementById(\"recover-data\")\n\n//4- variable que puedo cambiar su valor\nlet userList = []\n\n//1- Cada vez que arranca la página hay que obtener 10 usuarios al azar llamando a esta API\nconst search = () => {\n    fetch(`https://randomuser.me/api/?results=10`)\n        .then((response) => response.json())\n        .then((data) => {\n\n            //2- Iterar sobre los valores del array:data.result. Por cada iteración user toma el valor del array que se está iterando.\n            for (const user of data.results) {\n\n                //3- Crear un usuario nuevo con las propiedades requeridas y guardarlas en el objeto\n                const newUser = {\n                    name: `${user.name.title} ${user.name.first} ${user.name.last}`,\n                    picture: user.picture.medium,\n                    location: user.location.country,\n                    login: user.login.username,\n                    isFriend: false,\n                    id: user.email,\n                }\n\n                //5- Añadir usuarios con el formato nuevo al final del array userList\n                userList.push(newUser)\n            }\n    \n            renderHtml()\n\n            assignEvents()\n\n        });\n    };\n       \n//8- Función para pintar un usuario\nconst getHtmlForUsers = (user) => {\n\n    const htmlForUsers = `\n        <div id=\"${user.id}\" class=\"div-main ${user.isFriend === true ? 'is-friend' : ''}\">\n            <img class=\"image\" src=\"${user.picture}\" alt=\"imagen de ${user.name}\">\n            <h2 class=\"name\">${user.name}</h2>\n            <h3 class=\"country\">${user.location}</h3>\n            <h6 class=\"login\">${user.login}</h6>\n        </div>\n    `\n    return htmlForUsers\n}\n\n//7- Iterar los valores de userList que tiene el listado de usuarios con el formato nuevo. Por cada iteración usuarioNuevo toma el valor de un usuario con el formato nuevo. Dentro del for of se construye el html para un usuario.\nconst renderHtml = () =>{\n    htmlSection.innerHTML = ''\n\n    for (const userNewFormat of userList) {\n        const html = getHtmlForUsers(userNewFormat);\n        htmlSection.innerHTML += html;\n    }\n}\n\nconst assignEvents = () =>{\n    for (const userNewFormat of userList) {\n        const userDiv = document.getElementById(userNewFormat.id)\n        userDiv.addEventListener('click', handleFavorite)\n    }\n}\n\nsearch()\n\nconst handleFavorite = (event) => {\n    event.preventDefault()\n    const id = event.currentTarget.id\n    \n    for (const user of userList) {\n        if(user.id === id){\n            user.isFriend = !user.isFriend //Lo contrario de lo que estaba anteriormente.\n        }\n    }\n    renderHtml()\n    assignEvents()\n}\n\nconst handleSaveData = (event) => {\n    event.preventDefault()\n    localStorage.setItem('user', JSON.stringify(userList));\n}\n\nconst handleRecoverData = (event) => {\n    event.preventDefault()\n    userList = JSON.parse(localStorage.getItem('user'))\n    renderHtml()\n    assignEvents()\n}\n\nsaveData.addEventListener('click', handleSaveData)\n        \nrecoverData.addEventListener('click', handleRecoverData)\n\n\n\n\n\n\n"]}